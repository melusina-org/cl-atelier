#!/bin/sh

# makedoc — Makedoc for ${PROJECT_NAME}

# ${PROJECT_NAME} (${HOMEPAGE})
# This file is part of ${PROJECT_NAME}.
#
# Copyright © ${COPYRIGHT_YEAR} ${COPYRIGHT_HOLDER}
# All rights reserved.

# ${LICENSE_HEADER}

: ${TOPLEVELDIR:=$(git rev-parse --show-toplevel)}
: ${subrdir:=${TOPLEVELDIR}/subr}
: ${makedocdir:=${TOPLEVELDIR}/obj/makedoc}
: ${makedocsystem:="${LISP_SYSTEM_NAME}"}
: ${makedocpackage:="${LISP_PACKAGE_NAME}"}

. "${subrdir}/stdlib.sh"

makedoc_sbcl()
{
    sbcl --noinform --disable-debugger "$@"
}

makedoc_runpatches()
{
    for patch in "${TOPLEVELDIR}"/doc/patch/*.sed; do
	include="${patch}"
	include="obj/makedoc/include/${include##*/patch/}"
	include="${include%.sed}.texinfo"
	if [ -f "${patch}" ]; then
	    sed_inplace -f "${patch}" "${include}"
	fi
    done
}

makedoc_extract()
{
    makedoc_sbcl \
        --eval "(unless (ql:where-is-system :${makedocsystem})
                  (pushnew #p\".\" ql:*local-project-directories*)
                  (ql:register-local-projects))"\
	--eval "(ql:quickload :${makedocsystem})"\
	--eval '(with-compilation-unit () (load "libexec/lisp/docstrings.lisp"))' \
	--eval "(sb-texinfo:generate-includes
 \"obj/makedoc/include/\"
 (list '#:${makedocpackage}) :base-package '#:${makedocpackage})" \
	--eval '(quit)'
}

makedoc_info()
(
    cd "${TOPLEVELDIR}/obj/makedoc"
    makeinfo "${TOPLEVELDIR}/doc/${makedocsystem}.texinfo"
)

makedoc_pdf()
(
    cd "${TOPLEVELDIR}/obj/makedoc"
    texi2pdf "${TOPLEVELDIR}/doc/${makedocsystem}.texinfo"
)

makedoc_html()
(
    cd "${TOPLEVELDIR}/obj/makedoc"
    makeinfo --html --no-split "${TOPLEVELDIR}/doc/${makedocsystem}.texinfo"
)

makedoc_main()
{
    if [ ! -f "${TOPLEVELDIR}/doc/${makedocsystem}.texinfo" ]; then
	1>&2 printf 'Info: makedoc: There is no documentation master file.\n'
	exit 1
    fi
    if [ ! -f "${TOPLEVELDIR}/libexec/lisp/docstrings.lisp" ]; then
	1>&2 printf 'Info: makedoc: Cannot find docstrings lisp utility script.\n'
	exit 1
    fi
    set -e
    makedoc_extract
    makedoc_runpatches
    makedoc_info
    makedoc_html
    makedoc_pdf
}

makedoc_main "$@"

# End of file `makedoc'
